Calculate lbProceed as kFalse
If pcTableID<>''
	Calculate lbValidTable as kTrue
Else If $cinst.SMH_TABLE_PRFX<>''
	Calculate lbValidTable as kTrue
End If
If pnKeyInt<>0
	Calculate lbValidKey as kTrue
Else If pcKeyChar<>''
	Calculate lbValidKey as kTrue
Else If $cinst.SMH_PKEY_I<>0
	Calculate lbValidKey as kTrue
Else If $cinst.SMH_PKEY_C<>''
	Calculate lbValidKey as kTrue
End If
Calculate lbProceed as lbValidTable&lbValidKey

If lbProceed
	If tlDatabases.DAM='WebService'
		;  pass parameters to web service
		;  $callService (pFieldReference, row(TableClassName, CurrentMethodName, p1,...,pn) )     ;; result will be returned in pFieldReference, row() contains the parameters for the call
		
		;  We tried calling this RESTful method with the complete row structure but the encrypted string
		;  became too long, over 6000 characters, which was too long for acceptable HTTP protocol rules.
		If pcTableID<>''
			Do ioWeb.$callDelete($cinst,irErrorSQL,row($cinst.$class().$name,$cmethod().$name,#NULL,row(pcTableID,pnKeyInt,pcKeyChar))) Returns lnRecordsAffected
		Else
			Do $cinst.$WhereNamesDeconstructed(kTrue) Returns lcWhereClause
			Do ioWeb.$callDelete($cinst,irErrorSQL,row($cinst.$class().$name,$cmethod().$name,lcWhereClause,#NULL)) Returns lnRecordsAffected
		End If
		If isclear(lnRecordsAffected)     ;; could be NULL if call fails to reach the server method
			If irErrorSQL.NativeErrorText<>''
				Quit method kFalse
			Else
				Do $cinst.$clear()
				Quit method kTrue     ;; sql statement was legal but no row was deleted - we will treat this as valid
			End If
		End If
		Do $cinst.$clear()
		Quit method kTrue
	End If
	
	Calculate icStatementType as 'DELETE'
	
	Do $cinst.$ImmediateSession(loSession,loStatement) Returns lbImmediateSession
	If lbImmediateSession
		Do $cinst.$SetSession(loSession,loStatement)
	Else If not(ibGoodConnectionToDb)
		Quit method kFalse
	End If
	
	Begin statement
	Sta: {delete from   [$cinst.$servertablenames()]}
	If pcTableID<>''
		Sta: {where SMH_TABLE_PRFX = @[pcTableID]}
	Else
		Sta: {where SMH_TABLE_PRFX = @[$cinst.SMH_TABLE_PRFX]}
	End If
	If pnKeyInt<>0
		Sta: {and    SMH_PKEY_I = @[pnKeyInt]}
	Else If pcKeyChar<>''
		Sta: {and    SMH_PKEY_C = @[pcKeyChar]}
	Else If $cinst.SMH_PKEY_I<>0
		Sta: {and    SMH_PKEY_I = @[$cinst.SMH_PKEY_I]}
	Else If $cinst.SMH_PKEY_C<>''
		Sta: {and    SMH_PKEY_C = @[$cinst.SMH_PKEY_C]}
	End If
	Sta: {and    SMH_OWNER = @[$ctask.trCurrUser.USR_NAME]}
	End statement
	Do $cinst.$executesql() Returns lbOK
	Calculate lnRecordsAffected as $cinst.$statementobject.$rowsaffected
	If lbImmediateSession
		Do $cinst.$SetSession(#NULL,#NULL,kTrue)
	End If
	
	If lnRecordsAffected>0
		Do $cinst.$clear()
	End If
End If

Quit method lbOK&(lnRecordsAffected>0)