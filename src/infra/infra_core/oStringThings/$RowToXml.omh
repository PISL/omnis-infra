
If pbFirstIteration
	Begin text block
End If

For lnColNo from 1 to pRow.$colcount step 1
	Calculate lcColName as pRow.$cols.[lnColNo].$name
	Calculate lrInnerRow as ''
	Calculate llInnerList as ''
	Calculate lcColValue as ''
	
	If pRow.$cols.[lnColNo].$type=kRow
		Calculate lrInnerRow as pRow.[lcColName]
		
		;  begin row
		Text: {<row_[lcColName]>}
		Do method $RowToXml (lrInnerRow,kFalse)     ;; recursive call
		;  end row
		Text: {</row_[lcColName]>}
		
	Else If pRow.$cols.[lnColNo].$type=kList
		Calculate llInnerList as pRow.[lcColName]
		
		;  begin list
		Text: {<array_[lcColName]>}
		;  for each line in list
		Calculate llInnerList.$line as 0
		While $Loop(llInnerList)
			Calculate lrInnerRow as llInnerList
			;  begin row (in list)
			Text: {<row_[lcColName]>}
			Do method $RowToXml (lrInnerRow,kFalse)     ;; recursive call
			;  end row (in list)
			Text: {</row_[lcColName]>}
		End While
		;  end list
		Text: {</array_[lcColName]>}
		
	Else
		Calculate lcColValue as pRow.[lcColName]
		;  single value name/column pair
		Text: {<[lcColName]>[lcColValue]</[lcColName]>}
	End If
	
End For

If pbFirstIteration
	End text block
	Get text block lcXmlContent
	Calculate lcXmlContent as con('<xml>',lcXmlContent,'</xml>')     ;; complete xml doxument syntax
	
	Quit method lcXmlContent
End If