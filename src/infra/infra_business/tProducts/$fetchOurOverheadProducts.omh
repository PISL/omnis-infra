;  specific to MEC suite
If left(tcCurrentLibrary,3)<>'MEC'
	Breakpoint {Developer:  What are you doing here?}
	Quit method
End If

If tlDatabases.DAM='WebService'
	If pbReturnCount
		;  $callService (pFieldReference, row(TableClassName, CurrentMethodName, p1,...,pn) )     ;; result will be returned in pFieldReference, row() contains the parameters for the call
		Do ioWeb.$callFetch(lnCount,irErrorSQL,row($cinst.$class().$name,$cmethod().$name,row(pnOOL_SEQ,pDateFrom,pDateTo,pbReturnCount),lnCount.$type,0,ilRESTextensions))
		If ioWeb.irResponse.httpStatusCode=200
			;  the result should be in this object     ;; however there may be a SQL error
			If irErrorSQL.NativeErrorText<>''
				Quit method kFalse
			End If
			Quit method lnCount
		Else
			Quit method kFalse
		End If
	Else
		Do ioWeb.$callFetch(llProduct,irErrorSQL,row($cinst.$class().$name,$cmethod().$name,row(pnOOL_SEQ,pDateFrom,pDateTo,pbReturnCount),llProduct.$type,1,ilRESTextensions))
		If ioWeb.irResponse.httpStatusCode=200
			;  the result should be in this object     ;; however there may be a SQL error
			If irErrorSQL.NativeErrorText<>''
				Quit method kFalse
			End If
			Quit method llProduct
		Else
			Quit method kFalse
		End If
	End If
End If

Calculate ldNextDate as pDateTo+1

Do $cinst.$ImmediateSession(loSession,loStatement) Returns lbImmediateSession
If lbImmediateSession
	Do $cinst.$SetSession(loSession,loStatement)
Else If not(ibGoodConnectionToDb)
	Quit method kFalse
End If

;  out of Products
;  a.  purchased     ;; they have a supplier number
;       ;; PRD_SUPP_CODE will have a value
;  b.  by-product     ;; is a product we make but not for sale - it is for input into another process
;       ;; PRD_SUPP_CODE will be null
;  c.  product     ;; something that we sell

;  overhead products have been purchased from customers and placed into an overhead account

Begin statement (Carriage return,Linefeed)
If pbReturnCount
	Sta: {select count(*) from (}
End If

Sta: {select [$cinst.$selectnames()]}
Sta: {from [lrOverheadGroupOrg.$servertablenames]}
Sta: {join [lrOverheadDetail.$servertablenames] on ohd_ool_ref = ool_seq}
Sta: {join [lrEcoInvoiceInDetail.$servertablenames] on eid_seq = ohd_eid_ref}
Sta: {join [lrEcoInvoiceInHeader.$servertablenames] on eih_seq = eid_eih_ref}
Sta: {join [$cinst.$servertablenames] on prd_seq = eid_prd_ref and prd_meta = @[inMeta]}
Sta: {where ool_seq = @[pnOOL_SEQ]}
If not(isclear(pDateFrom))
	Sta: {and eih_pwhen >= @[pDateFrom]}
End If
If not(isclear(pDateTo))
	Sta: {and eih_pwhen <= @[pDateTo]}
End If

Sta: {union}

;  products we have manufactured
Sta: {select [$cinst.$selectnames()]}
Sta: {from [$cinst.$servertablenames]}
Sta: {join [lrCalcResult.$servertablenames] on cpr_prd_ref = prd_seq}
;  Sta: {join [lrProductBatch.$servertablenames] on pb_seq = cpr_pb_ref}
Sta: {join [lrOverheadDetail.$servertablenames] on ohd_cpr_ref = cpr_seq}
Sta: {join [lrOverheadGroupOrg.$servertablenames] on ool_seq = ohd_ool_ref and ool_seq = @[$ctask.trGroupOrg.GO_SEQ]}
;  Sta: {join [lrOverheadAccount.$servertablenames] on ohh_seq = ool_ohh_ref and ohh_seq = @[pnOOL_SEQ]}
Sta: {where    CPR_CWHEN between @[pDateFrom] and @[ldNextDate]}
Sta: {and PRD_META = @[inMeta]}

If pbReturnCount
	Sta: {)}
End If

End statement

If pbReturnCount
	Do $cinst.$executesqlandfetchinto(lnCount) Returns lbOK
Else
	Do $cinst.$executesqlandfetch() Returns lbOK
End If

If lbImmediateSession
	Do $cinst.$SetSession(#NULL,#NULL,kTrue)
End If

If pbReturnCount
	Quit method lnCount
Else
	Quit method lbOK
End If