On evClick
	Calculate icDisplayMessage as ''
	Calculate lrAttributes as OJSON.$jsontolistorrow(irCurrentRecord.RFL_JSON,icDisplayMessage)
	If icDisplayMessage=''
		Calculate icDisplayMessage as 'JSON is valid'
		Calculate irCurrentRecord.RFL_JSON as OJSON.$formatjson(irCurrentRecord.RFL_JSON)     ;; format it for readability, this is removed when saving to Postgres JSONB type
		;  create an object on the fly
		Calculate $cobj.$forecolor as kColorDefault
		Calculate $cobj.$backcolor as kColorDefault
		Calculate $cobj.$textcolor as kColorDefault
		Calculate $cobj.$backalpha as 255     ;; opaque
		Calculate $cobj.$alpha as 255     ;; opaque
		
		;  now apply the JSON to an object on the form - this button !
		For lnCount from 1 to lrAttributes.$colcount step 1
			Calculate lcProperty as lrAttributes.$cols.[lnCount].$name
			If lcProperty=low(lcProperty)     ;; liklihood of an Omnis attribute is enhanced
				Test for valid calculation {eval(lrAttributes.[lcProperty])}
				If flag true
					Calculate $cobj.$[lcProperty] as eval(lrAttributes.[lcProperty])
				End If
			End If
		End For
	End If
	
	Do $cinst.$behaviour()
	Do $cinst.$redraw()