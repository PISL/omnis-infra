Calculate $cinst.icDisplayMessage as ''
If irCurrentRecord.RFG_JSON<>''
	Calculate lrAttributes as OJSON.$jsontolistorrow(irCurrentRecord.[irCurrentRecord.icPrefix]JSON,icDisplayMessage)
	If icDisplayMessage=''
		Calculate $cobj.$errortext as 'JSON is valid'
		Calculate irCurrentRecord.[irCurrentRecord.icPrefix]JSON as OJSON.$formatjson(irCurrentRecord.[irCurrentRecord.icPrefix]JSON)     ;; format it for readability, this is removed when saving to Postgres JSONB type
		;  create an object on the fly
		Calculate $cobj.$forecolor as kColorDefault
		Calculate $cobj.$backcolor as kColorDefault
		Calculate $cobj.$textcolor as kColorDefault
		Calculate $cobj.$backalpha as 255     ;; opaque
		Calculate $cobj.$alpha as 255     ;; opaque
		
		If irCurrentRecord.[irCurrentRecord.icPrefix]CLASS='FORMCOLOURS'
			;  now apply the JSON to an object on the form - this button !
			For lnCount from 1 to lrAttributes.$colcount step 1
				Calculate lcProperty as lrAttributes.$cols.[lnCount].$name
				If lcProperty=low(lcProperty)     ;; liklihood of an Omnis attribute is enhanced
					Test for valid calculation {eval(lrAttributes.[lcProperty])}
					If flag true
						Calculate $cobj.$[lcProperty] as eval(lrAttributes.[lcProperty])
					End If
				End If
			End For
		End If
	Else
		Calculate $cobj.$errortext as 'invalid JSON !'     ;; icDisplayMessage has details of error
	End If
Else
	Calculate $cobj.$errortext as ''
End If